/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package marvellous.packer.unpacker;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;
import java.io.BufferedReader;




public class MarvellousPack 
{
    FileOutputStream outstream= null;
    String ValidExt[]={".txt",".c",".java",".cpp"};
    public MarvellousPack(String src, String Dest)throws Exception
    {
        String Magic = "Marvellous11";
        byte arr[]=Magic.getBytes();
        File outfile=new File(Dest);
        
        File infile=null;
        outstream = new FileOutputStream(Dest);
        outstream.write(arr,0,arr.length);
        File folder = new File(src);
        
        System.setProperty("user.dir", src);
        listAllFiles(src);
    }

   

   /* MarvellousPack(String text, String text0) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    MarvellousPack(String text) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }*/
    
    public void listAllFiles(String path)
    {
        try
        (Stream<Path>paths=Files.walk(Paths.get(path)))
            {
                paths.forEach(filePath ->
                {
                    if(Files.isRegularFile(filePath))
                    {
                        try
                        {
                            String name = filePath.getFileName().toString();
                            String ext= name.substring(name.lastIndexOf("."));
                            
                            List<String> list= Arrays.asList(ValidExt);
                            if(list.contains(ext))
                            {
                                File file=new File(filePath.getFileName().toString());
                                Pack(file.getAbsolutePath());
                            }
                        }
                        catch(Exception e)
                        {
                            System.out.println(e);
                        }
                    }
                        
                });
            }
            catch(IOException e)
            {
                    System.out.println(e);
            }
        }
        
        public void Pack(String filePath)
        {
            FileInputStream instream=null;
            try
            {
                byte[] buffer= new byte[1024];
                int length;
                byte temp[] = new byte[1000];
                File fobj= new File(filePath);
                
                String Header = filePath+" "+fobj.length();
                for(int i=Header.length();i<100;i++)
                
                    Header += "";
                    temp=Header.getBytes();
                    instream = new FileInputStream(filePath);
                    outstream.write(temp, 0, temp.length);
                    
                    while((length = instream.read(buffer))>0)
                    {
                        outstream.write(buffer,0,length);
                    }
                    instream.close();
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
        }

    



    

   
    /*public MarvellousPack()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarvellousPack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarvellousPack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarvellousPack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarvellousPack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()  
        {
            public void run()   
            {
                new MarvellousPack().setVisible(true);
            }
        });
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

